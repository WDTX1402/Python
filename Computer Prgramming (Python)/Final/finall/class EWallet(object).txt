class EWallet(object):
        def __init__(self,owner,max_amount,balance = 0):
		self.owner = owner
		self.max_amount = max_amount
		self.balance = balance
	def withdraw(self, amount):
		if amount <= self.balance:
			self.balance - amount
		else:
			print(f"Insuffecient funds")
	def deposit(self, amount):
		if self.balance + amount < self.max_amount:
			self.balance += amount
		else:
			print(f"Error, Balance exceeds maximum amount")
	def get_balance(self):
		print(f"Your balance is {self.balance}")

class SmartEWallet(EWallet):
	def __init__(self,owner,max_amount,balance = 0):
		super().__init__(owner,max_amount,balance):
		self.max_withdraw = 0
		self.history = []
	def set_max_withdraw(self, max):
		if max > 0:
			self.max_withdraw = max
		else:
			print("Must not be negative or zero")
	def deposit(self, amount):
		super()deposit(amount)
		self.history.append(f"{self.owner} deposited {amount}. Current balance is {self.balance}")
	def withdraw(self,amount):
		if amount <= self.max_withdraw:
			super()withdraw(amount)
			self.history.append(f"{self.owner} deposited {amount}. Current balance is {self.balance}")
		else:
			print("Amount exceeds maximum allowance")